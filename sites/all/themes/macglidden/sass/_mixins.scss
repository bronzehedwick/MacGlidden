// @file
// Custom sass mixins
//
// Define the custom mixins for your project here.
// http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#defining_a_mixin

// Makes an element visually hidden, but accessible.
// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    clip: rect(1px 1px 1px 1px); // IE6 and IE7 use the wrong syntax.
  }
  clip: rect(1px, 1px, 1px, 1px);
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

// Makes an element visually hidden by default, but visible when focused.
@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}

// Make a background image fill all available space
@mixin background-full {
  position: relative;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center center;
}

// Generates a responsive background that will always fill the available space
@mixin background($name) {
  $url: '/sites/all/themes/macglidden/images/backgrounds/' + $name + '.jpg';
  $url_lg: '/sites/all/themes/macglidden/images/backgrounds/' + $name + '_lg.jpg';

  @include background-full;
  background-image: url($url);

  @media all and (min-width: 550px) {
    background-image: url($url_lg);
  }
}
